---
import type { HTMLAttributes } from 'astro/types'

type Props = HTMLAttributes<'article'>

const { class: className, ...props } = Astro.props
---

<article class:list={['article', className]} {...props}>
  <slot />
</article>

<style>
  .article {
    @apply p-6;
  }
</style>

<style>
  .article :global(h1, h2, h3, h4, h5, h6) {
    @apply font-500 relative;
  }

  .article :global(h1::before, h2::before, h3::before, h4::before, h5::before, h6::before) {
  }

  .article :global(h1) {
    @apply text-8 mt-10 mb-6 pb-2 border-b border-blueGray-300;
  }
  .article :global(h2) {
    @apply text-6.5 mt-8 mb-4 pb-2 border-b border-blueGray-300;
  }
  .article :global(h3) {
    @apply text-5 mt-6 mb-3;
  }
  .article :global(h4) {
    @apply text-4.5 mt-5 mb-2;
  }
  .article :global(h5) {
    @apply text-4 mt-4 mb-2 font-medium;
  }
  .article :global(h6) {
    @apply text-3.5 mt-3 mb-2 font-medium text-gray-600;
  }

  .article :global(strong, b) {
    @apply font-bold;
  }
  .article :global(a) {
    @apply underline underline-offset-4 underline-dashed;
  }
  .article :global(p) {
    margin-bottom: 1em;
  }
  .article :global(.prose p) {
    margin-bottom: 2em;
  }
  .article :global(textarea) {
    width: 100%;
    font-size: 16px;
  }
  .article :global(input) {
    font-size: 16px;
  }
  .article :global(table) {
    width: 100%;
  }
  .article :global(img) {
    max-width: 100%;
    height: auto;
    border-radius: 8px;
  }
  .article :global(code) {
    padding: 2px 5px;
    background-color: rgb(var(--gray-light));
    border-radius: 2px;
  }
  .article :global(pre) {
    padding: 1.5em;
    border-radius: 8px;
  }
  .article :global(pre > code) {
    all: unset;
  }
  .article :global(blockquote) {
    border-left: 4px solid var(--accent);
    padding: 0 0 0 20px;
    margin: 0px;
    font-size: 1.333em;
  }
  .article :global(hr) {
    border: none;
    border-top: 1px solid rgb(var(--gray-light));
  }
</style>
