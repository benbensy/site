---
import type { HTMLAttributes } from 'astro/types'
import { Icon } from 'astro-icon/components'

type Props = HTMLAttributes<'a'> & {
  icon?: string
}

const { href, class: className, icon, ...props } = Astro.props
const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, '')
const subpath = pathname.match(/[^/]+/g)
const isActive = href === pathname || href === `/${subpath?.[0] || ''}`
---

<a href={href} class:list={['nav-link', { active: isActive }, className]} {...props}>
  {icon && <Icon name={icon} />}
  <slot />
</a>

<style>
  .nav-link {
    @apply text-gray-500 px-4 py-2 rounded-md transition-colors relative inline-flex flex-row items-center gap-2;
    text-decoration: none;
  }

  .nav-link:hover {
    @apply text-gray-700 font-bold;
  }

  .nav-link.active {
    @apply text-gray-700 font-bold;
  }

  .nav-link::after {
    content: '';
    @apply absolute left-0 right-0 h-3 -bottom-0.5 bg-sky-200/50 dark:bg-sky-500/30 -z-10;
    transform: scaleX(0) skewX(-8deg) translateY(-40%);
    transform-origin: left;
    transition: transform 0.2s ease-out;
  }

  .nav-link:hover::after,
  .nav-link.active::after {
    transform: scaleX(1) skewX(-12deg) translateY(-30%);
  }
</style>
